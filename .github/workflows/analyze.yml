name: Analyze feeds (VANTA AI)

on:
  workflow_run:
    workflows: ["RSS Scan"]   # must match the name: in rss.yml
    types: [completed]
  workflow_dispatch:
    inputs:
      run_date:
        description: "YYYY-MM-DD (UTC). Leave empty to auto-detect."
        required: false
        default: ""

permissions:
  contents: write

concurrency:
  group: analyze-vanta
  cancel-in-progress: false

jobs:
  ai:
    # auto-run only if RSS succeeded; always allow manual runs
    if: ${{ github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    timeout-minutes: 25

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # pin to the commit from RSS run; fallback for manual runs
          ref: ${{ github.event.workflow_run.head_sha || github.sha }}
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('**/requirements.txt') }}

      - name: Install requirements
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt

      - name: Resolve DATE (input → today UTC → latest processed file)
        id: date
        shell: bash
        run: |
          if [ -n "${{ inputs.run_date }}" ]; then
            DATE="${{ inputs.run_date }}"
          else
            DATE="$(date -u +%F)"
          fi
          # fallback to latest processed file if today's missing
          if ! ls data/processed/${DATE}*.jsonl >/dev/null 2>&1; then
            LATEST=$(ls -1t data/processed/*.jsonl 2>/dev/null | head -n1 || true)
            if [ -n "$LATEST" ]; then
              ALT=$(basename "$LATEST" | grep -Eo '[0-9]{4}-[0-9]{2}-[0-9]{2}' | head -n1)
              if [ -n "$ALT" ]; then DATE="$ALT"; fi
            fi
          fi
          echo "DATE=$DATE" | tee -a $GITHUB_ENV
          echo "Using DATE=$DATE"

      - name: Skip if no processed items (cost/noise control)
        shell: bash
        run: |
          COUNT=$(cat data/processed/${DATE}*.jsonl 2>/dev/null | wc -l || echo 0)
          if [ "$COUNT" -eq 0 ]; then
            echo "No processed items for $DATE — exiting."
            exit 0
          fi

      - name: Ensure output dirs
        run: |
          mkdir -p data/ai_bundles data/ai_out data/ai_final data/drift reports/daily

      - name: Build AI bundles
        run: python -m src.build_ai_bundle --date "$DATE"

      - name: Mock AI infer (VANTA1/2)
        run: python -m ai_layer.infer --date "$DATE"

      - name: Interpret & score (final)
        run: python -m ai_layer.interpreter --date "$DATE"

      - name: Drift scoring (7-day lookback)
        run: python -m ai_layer.drift --date "$DATE" --lookback 7

      - name: Rebuild report (with drift)
        run: python -m ai_layer.interpreter --date "$DATE"

      - name: Validate outputs
        run: python -m src.validate_outputs --date "$DATE"

      - name: Commit analysis artifacts
        shell: bash
        run: |
          git config user.name "github-actions"
          git config user.email "actions@users.noreply.github.com"
          git add data/ai_bundles data/ai_out data/ai_final data/drift reports/daily || true
          if ! git diff --cached --quiet; then
            git commit -m "auto: AI analysis $DATE"
            git push
          else
            echo "No changes to commit."
          fi
